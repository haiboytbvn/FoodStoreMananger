@model TestCasesInventory.Presenter.Models.UpdateDisplayNameViewModel

<<<<<<< DEVELOPMENT/User_Update
    @{

        ViewBag.Title = "Edit Your DisplayName";
    }
=======
@{

    ViewBag.Title = "Edit Your DisplayName";
}
>>>>>>> local


    <h2>Change Display Name</h2>

<<<<<<< DEVELOPMENT/User_Update
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>Change Display Name Form</h4>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">

                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>
=======
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        <h4>Change Display Name Form</h4>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.ID)*@

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
            <div class="form-group">

                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>
>>>>>>> local

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change Display Name" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

